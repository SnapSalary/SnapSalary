name: Build and Setup React Application in S3
on:
  push:
    branches: [ main, staging ]
  pull_request:
    types: [opened, reopened, ready_for_review, edited, synchronize]

jobs:
  build:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Set Subdomain if not PR
        if: github.event_name != 'pull_request'
        run: |
          if [[ $GITHUB_REF_NAME != 'main' ]]; then
            echo "TF_WORKSPACE=$GITHUB_REF_NAME" >> "$GITHUB_ENV"
          else
            echo "TF_WORKSPACE=www" >> "$GITHUB_ENV"
          fi
      - name: Set Subdomain if PR
        if: github.event_name == 'pull_request'
        run: echo "TF_WORKSPACE=${{ github.event.pull_request.id }}" >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Output build files
        uses: actions/setup-node@v3
        with:
          node-version: 17.9.0
          cache: 'npm'
          cache-dependency-path: ./client/package-lock.json
      - name: Install dependencies 
        run: npm install
        working-directory: ./client

      - name: Build Application
        run: npm run build
        working-directory: ./client

      - name: Create Terraform Workspace
        if: workspace
        run: terraform workspace new env.TF_WORKSPACE

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            if (context.eventName !== 'pull_request') {
              return
            }
            console.log(context)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Your test page has been built and is available at: ${{ env.TF_WORKSPACE }}.${{ secrets.AWS_S3_BUCKET }}'
            })
