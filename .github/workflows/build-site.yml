name: Build and Setup React Application in S3
on:
  push:
    branches: [ main, staging ]

jobs:
  build:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - name: Output build files
        uses: actions/setup-node@v1
        with:
          node-version: 17.9.0
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}
      - name: Install dependencies 
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: ./tf/${{ GITHUB_REF_NAME }}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./tf/${{ GITHUB_REF_NAME }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./tf/${{ GITHUB_REF_NAME }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        working-directory: ./tf/${{ GITHUB_REF_NAME }}
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
        working-directory: ./tf/${{ GITHUB_REF_NAME }}
